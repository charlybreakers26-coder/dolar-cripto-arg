javascript document.addEventListener('DOMContentLoaded', () => { function updateRates() { fetch('https://dolarapi.com/v1/cotizaciones/ars') .then(r => r.json()) .then(data => { const rates = document.getElementById('rates'); rates.innerHTML = ` <div class=rate>Dólar Oficial: ${data.oficial.venta} ARS <span class=${data.oficial.variacion > 0 ? 'up' : 'down'}>${data.oficial.variacion}%</span></div> <div class=rate>Dólar Blue: ${data.blue.venta} ARS <span class=${data.blue.variacion > 0 ? 'up' : 'down'}>${data.blue.variacion}%</span></div> <div class=rate>Dólar MEP: ${data.mep.venta} ARS <span class=${data.mep.variacion > 0 ? 'up' : 'down'}>${data.mep.variacion}%</span></div> <div class=rate>Dólar CCL: ${data.ccl.venta} ARS <span class=${data.ccl.variacion > 0 ? 'up' : 'down'}>${data.ccl.variacion}%</span></div> <div class=rate>Dólar Cripto: ${data.cripto.venta} ARS <span class=${data.cripto.variacion > 0 ? 'up' : 'down'}>${data.cripto.variacion}%</span></div> `; }) .catch(() => rates.innerHTML = '<div class=rate>Error al cargar cotizaciones</div>'); } updateRates(); setInterval(updateRates, 30000); }); document.getElementById('calcForm').addEventListener('submit', async (e) => { e.preventDefault(); const pair = document.getElementById('pair').value; const currency = document.getElementById('currency').value; const results = document.getElementById('results'); results.style.display = 'block'; results.innerHTML = '<h3>Cargando...</h3>'; try { let data; if (pair === 'usdt/ars') { data = await fetch('https://api.binance.com/api/v3/ticker/price?symbol=USDTARS').then(r => r.json()); } else if (pair === 'btc/usdt') { data = await fetch('https://api.binance.com/api/v3/ticker/price?symbol=BTCUSDT').then(r => r.json()); } else if (pair === 'eth/usdt') { data = await fetch('https://api.binance.com/api/v3/ticker/price?symbol=ETHUSDT').then(r => r.json()); } const price = data.price; const exchanges = { binance: price * (currency === 'ars' ? 1360 : 1), ripio: price * (currency === 'ars' ? 1.03 : 1) * 1360, bux: price * (currency === 'ars' ? 1.02 : 1) * 1360 }; const table = `<table><tr><th>Exchange</th><th>Precio (${currency.toUpperCase()})</th><th>Acción</th></tr>`; let minPrice = Infinity, maxPrice = -Infinity, buyExchange = '', sellExchange = ''; for (let [ex, p] of Object.entries(exchanges)) { const action = p < minPrice ? 'Comprar' : p > maxPrice ? 'Vender' : ''; if (p < minPrice) { minPrice = p; buyExchange = ex; } if (p > maxPrice) { maxPrice = p; sellExchange = ex; } table += `<tr><td>${ex}</td><td>${p.toFixed(2)}</td><td>${action}</td></tr>`; } table += '</table>'; const profit = ((maxPrice - minPrice) / minPrice * 100).toFixed(2); results.innerHTML = `${table}<p>Ganancia potencial: ${profit}%</p>`; } catch (e) { results.innerHTML = '<h3>Error al cargar precios</h3>'; } });
